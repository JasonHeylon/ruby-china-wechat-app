<style lang='scss'>
.container {
  height: 100%;
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: space-between;
  box-sizing: border-box;
}
</style>

<script>
import wepy from 'wepy'
import 'wepy-async-function'
import Promise from 'promise-polyfill'

export default class extends wepy.app {
  config = {
    pages: [
      'pages/popular',
      'pages/topics',
      'pages/jobs',
      'pages/topic'
    ],
    window: {
      backgroundTextStyle: 'dark',
      navigationBarBackgroundColor: '#E84920',
      navigationBarTitleText: 'Ruby China',
      navigationBarTextStyle: 'white'
    },
    tabBar: {
      list: [
        {
          pagePath: 'pages/popular',
          text: '精华',
          selectedColor: '#E84920',
          color: '#fff'
        },
        {
          pagePath: 'pages/topics',
          text: '社区',
          selectedColor: '#E84920'
        },
        {
          pagePath: 'pages/jobs',
          text: '招聘',
          selectedColor: '#E84920'
        }

      ]
    },
    debug: true
  }

  globalData = {
    userInfo: null
  }

  constructor () {
    super()
    this.use('requestfix')
    this.use('promisify')
  }

  onLaunch() {
    // this.testAsync()
  }

  sleep (s) {
    return new Promise((resolve, reject) => {
      setTimeout(() => {
        resolve('promise resolved')
      }, s * 1000)
    })
  }

  async testAsync () {
    const data = await this.sleep(3)
    console.log(data)
  }

  getUserInfo(cb) {
    const that = this
    if (this.globalData.userInfo) {
      return this.globalData.userInfo
    }
    wepy.getUserInfo({
      success (res) {
        that.globalData.userInfo = res.userInfo
        cb && cb(res.userInfo)
      }
    })
  }
}
</script>
